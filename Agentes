import os
import requests
from crewai import Agent, Task, Crew, Process
from crewai_tools import SerperDevTool, BaseTool
import openai

# API’s
os.environ["SERPER_API_KEY"] = 
os.environ["OPENAI_API_KEY"] = 
os.environ["LANGUAGETOOL_API_KEY"] = 
os.environ["UNSPLASH_API_KEY"] =
os.environ["COLORMIND_API_KEY"] =

# OpenAI
openai.api_key = os.environ["OPENAI_API_KEY"]

search_tool = SerperDevTool()

class LanguageTool(BaseTool):
    name: str = "LanguageTool"
    description: str = "Ferramenta de verificação gramatical e ortográfica."

    def _run(self, text: str) -> str:
        url = f"https://api.languagetool.org/v2/check"
        params = {
            'text': text,
            'language': 'en-US',
            'apiKey': os.environ["LANGUAGETOOL_API_KEY"]
        }
        response = requests.post(url, data=params)
        return response.json()

class UnsplashTool(BaseTool):
    name: str = "Unsplash"
    description: str = "Ferramenta para obter imagens de alta qualidade."

    def _run(self, query: str) -> str:
        url = f"https://api.unsplash.com/search/photos"
        params = {
            'query': query,
            'client_id': os.environ["UNSPLASH_API_KEY"]
        }
        response = requests.get(url, params=params)
        return response.json()

class ColormindTool(BaseTool):
    name: str = "Colormind"
    description: str = "Ferramenta para gerar paletas de cores."

    def _run(self, input_colors: str) -> str:
        url = "http://colormind.io/api/"
        data = {
            "model": "default",
            "input": input_colors.split(',')
        }
        response = requests.post(url, json=data)
        return response.json()

class OpenAITool(BaseTool):
    name: str = "OpenAI"
    description: str = "Ferramenta para geração de texto usando OpenAI GPT-3."

    def _run(self, prompt: str) -> str:
        response = openai.Completion.create(
            engine="davinci",
            prompt=prompt,
            max_tokens=150
        )
        return response.choices[0].text.strip()

# Agente de copywriter
copywriter = Agent(
    role='Copywriter',
    goal='Escrever textos publicitários atraentes e eficazes sobre pneus e serviços relacionados a pneus em carros',
    verbose=True,
    memory=True,
    backstory=(
        "Você é um redator experiente na São Gabriel Pneus, especializado em criar textos"
        "que chamam a atenção e persuadem o público. Sua missão é"
        "destacar os benefícios dos produtos e serviços e motivar os consumidores"
        "a tomar ações."
    ),
    tools=[search_tool, LanguageTool(), OpenAITool()],
    allow_delegation=True
)

# Agente de marketing
marketing_expert = Agent(
    role='Marketing Expert',
    goal='Planejar e executar estratégias de marketing para promover pneus e serviços relacionados a pneus em carros',
    verbose=True,
    memory=True,
    backstory=(
        "Você é um especialista em marketing na São Gabriel Pneus, com uma vasta experiência"
        "em planejar e executar campanhas que aumentam a visibilidade e as vendas."
        "Seu objetivo é criar estratégias que alcancem o público-alvo de forma eficaz."
    ),
    tools=[search_tool, OpenAITool()],
    allow_delegation=True
)

# Agente de design
designer = Agent(
    role='Designer',
    goal='Criar elementos visuais atraentes para campanhas sobre pneus e serviços relacionados a pneus em carros',
    verbose=True,
    memory=True,
    backstory=(
        "Você é um designer talentoso na São Gabriel Pneus, com um olho para detalhes e estética."
        "Seu trabalho é criar gráficos e elementos visuais que complementem"
        "os textos publicitários e as estratégias de marketing, garantindo"
        "uma apresentação coesa e atraente."
    ),
    tools=[UnsplashTool(), ColormindTool(), OpenAITool()],
    allow_delegation=True
)

# Tarefa de criação de texto publicitário
copywriting_task = Task(
    description=(
        "Escreva um texto publicitário cativante sobre pneus e serviços relacionados a pneus em carros."
        "O texto deve destacar as principais vantagens dos produtos e serviços,"
        "ser persuasivo e encorajar o leitor a realizar uma compra."
    ),
    expected_output='Um texto publicitário de 3 parágrafos sobre pneus e serviços relacionados a pneus em carros.',
    tools=[search_tool, LanguageTool(), OpenAITool()],
    agent=copywriter,
)

# Tarefa de planejamento de marketing
marketing_task = Task(
    description=(
        "Crie uma estratégia de marketing abrangente para promover pneus e serviços relacionados a pneus em carros."
        "A estratégia deve incluir análises de mercado, definição do público-alvo,"
        "e sugestões de canais e métodos de promoção."
    ),
    expected_output='Um plano de marketing detalhado para pneus e serviços relacionados a pneus em carros.',
    tools=[search_tool, OpenAITool()],
    agent=marketing_expert,
)

# Tarefa de design
design_task = Task
